% 元组是有顺序的
% yes
(1,2,3) = (1,2,3). 
% no
(1,2,3) = (2,3,1). 

% 变量在等号的哪一侧是完全没有关系的，如果 prolog 认为他们相同，他们就可以合一
(A,B,C) = (1,2,3).
% A = 1
% B = 2
% C = 3
% yes
(1,2,3) = (A,B,C).
% A = 1
% B = 2
% C = 3
% yes
(A, 2, C) = (1, B, 3).
% A = 1
% B = 2
% C = 3
% yes

% =====================
% 列表的用法和元组相同
[1,2,3] = [1,2,3].
% yes
[1,2,3] = [X,Y,Z].
% X = 1
% Y = 2
% Z = 3
% yes
[2,2,3] = [X,X,Z].
% X = 2
% Z = 3
% yes [X, X, Z]和[2, 2, 3]可以合一，因为Prolog设置X = 2后可以使它们相同。
[1,2,3] = [X,X,Z].
% no [1, 2, 3] = [X, X, Z]不能合一，因为X同时用在第一个和第二个元素位置上,但两个元素的值不同

% 列表拥有一项元组所不具备的能力，即你可以通过[Head|Tail]解构列表。当你将一个列表与这种结构合一时，Head将绑定列表的第一个元素，而Tail将绑定剩余元素
[a,b,c] = [Head|Tail].
% Head = a
% Tail = [b,c]

% yes

[a,b,c] = [a|Tail].
% Tail = [b,c]

% yes

[a,b,c,d,e] = [_,_|[Head|_]].
% Head = c

% yes

% `_` 是通配符，可以和任何对象合一
